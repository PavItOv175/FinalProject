import requests
from bs4 import BeautifulSoup
import telebot
from telebot import types

bot = telebot.TeleBot("5624995924:AAHP35cOODpjAcHh-0jmf1aDIsXCnqpz1Oc")
url_habr = "https://habr.com/ru/all/"
url_onliner = "https://tech.onliner.by/"
url_kurs = "https://kurs.onliner.by/"
#-----------------1--------------
response_habr = requests.get(url_habr)
response_habr.raise_for_status()
#-----------------2--------------
response_onliner = requests.get(url_onliner)
response_onliner.raise_for_status()

#-----------------1_1---------------
soup_onliner = BeautifulSoup(response_onliner.text, "lxml")
tag_onliner = soup_onliner.find_all("div", class_="news-tidings__list")

#-----------------2_1---------------
soup_habr = BeautifulSoup(response_habr.text, "lxml")
tag_habr = soup_habr.find_all("div", class_="tm-articles-list")
#-----------------3_1-------------
soup_kurs = BeautifulSoup(response_habr.text, "lxml")
tag_kurs = soup_habr.find_all("tr", class_="text-center h4")

#---------------------–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é----------------------
@bot.message_handler(commands=["start"])
def start(message):
    stic = open('stic.jpg', 'rb')

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_habr = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏ Habr')
    btn_onl = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏ Onliner')
    btn_kurs = types.KeyboardButton('–§–∏–Ω–∞–Ω—Å—ã')

    markup.add(btn_habr, btn_onl, btn_kurs)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, {0.first_name}! \n–Ø –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –±–æ—Ç. –°–º–æ—Ç—Ä–∏ —á—Ç–æ –º–æ–≥—É:\n'
                                          '\n1. –í—ã–≤–µ—Å—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 5 —Å–≤–µ–∂–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π c —Å–∞–π—Ç–∞ Habr\n'
                                          '2. –í—ã–≤–µ—Å—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 5 —Å–≤–µ–∂–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π c —Å–∞–π—Ç–∞ Onliner\n'
                                          '3. –ò–º–µ–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–∑–Ω–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≤–∞–ª—é—Ç USD\n'
                                          '4. –ë—ã—Å—Ç—Ä–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª-–≤–æ –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –ø—Ä–∏ –æ–ø–µ—Ä–∞—Ü–∏—è—Ö –ø–æ–∫—É–ø–∫–∏/–ø—Ä–æ–¥–∞–∂–∏ –≤–∞–ª—é—Ç—ã'.format(message.from_user),
                         reply_markup=markup)
    bot.send_sticker(message.chat.id, stic)

@bot.message_handler(content_types=['text'])
def func(message):
    if(message.text == "–ù–æ–≤–æ—Å—Ç–∏ Habr"):
        # -----------------------------–ü–∞—Ä—Å–∏–Ω–≥ —Å–∞–π—Ç–∞ Habr--------------------------------
        response_habr = requests.get(url_habr)
        response_habr.raise_for_status()
        soup_habr = BeautifulSoup(response_habr.text, "lxml")
        tag_habr = soup_habr.find_all("article", class_="tm-articles-list__item")
        for i in range(0, 5):
            title = tag_habr[i].find("h2").find("span").text
            urlOut = "https://habr.com" + tag_habr[i].find("h2").find("a").get("href")
            bot.send_message(message.chat.id, title + ": " + urlOut)
    elif (message.text == "–ù–æ–≤–æ—Å—Ç–∏ Onliner"):
        # -----------------------------–ü–∞—Ä—Å–∏–Ω–≥ —Å–∞–π—Ç–∞ Onliner--------------------------------
            response_onliner = requests.get(url_onliner)
            response_onliner.raise_for_status()
            soup_onliner = BeautifulSoup(response_onliner.text, "lxml")
            tag_onliner = soup_onliner.find_all("div", class_="news-tidings__subtitle")
            for i in range(0, 5):
                title = tag_onliner[i].find("a").find("span").text
                print(title)
                urlOut = "https://tech.onliner.by" + tag_onliner[i].find("a").get("href")
                bot.send_message(message.chat.id, title + ": " + urlOut)

    elif (message.text == "–§–∏–Ω–∞–Ω—Å—ã"):
            markup_kurs = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_kurs = types.KeyboardButton('üá∫üá∏  –ö—É—Ä—Å –≤–∞–ª—é—Ç')
            btn_kursUSD = types.KeyboardButton('  –ö—É–ø–∏—Ç—å USD')
            btn_kursBY = types.KeyboardButton('üá∫üá∏  –ü—Ä–æ–¥–∞—Ç—å USD')
            back = types.KeyboardButton('–ù–∞–∑–∞–¥')
            markup_kurs.add(btn_kurs, btn_kursUSD, btn_kursBY, back)
            bot.send_message(message.chat.id, "–§–∏–Ω–∞–Ω—Å—ã", reply_markup=markup_kurs)
    elif (message.text == "üá∫üá∏  –ö—É—Ä—Å –≤–∞–ª—é—Ç"):
       pars_hml(message)
    elif message.text == '–ü—Ä–æ–¥–∞—Ç—å USD':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö')
        bot.register_next_step_handler(msg, calc_usd_pokupka)
    elif message.text == '–ö—É–ø–∏—Ç—å USD':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö')
        bot.register_next_step_handler(msg, calc_usd_prodaja)
    else:
        msg = bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')
        bot.register_next_step_handler(msg, func)
    if message.text == '–ù–∞–∑–∞–¥':
        bot.send_message(message.chat.id, "/start")

def calc_usd_pokupka(message):
    try:
        r = requests.get("https://banki24.by/minsk/kurs/usd").text
        soup = BeautifulSoup(r, 'lxml')
        tag_kurs = soup.find_all("td", align="center")
        print(tag_kurs)
        b = tag_kurs[0].text.rpartition(' / ')[0].replace(',', '.')
        print(b)
        res = float("{0:.2f}".format(float(message.text) * float(b)))
        #res = round(float(message.text) * float(b))
        bot.send_message(message.chat.id, f'–£ –≤–∞—Å –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–∞ {float(message.text)} –¥–æ–ª–ª–∞—Ä–æ–≤ –°–®–ê = {res} —Ä—É–±–ª–µ–π')
    except ValueError:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ')

def calc_usd_prodaja(message):
    try:
        r = requests.get("https://banki24.by/minsk/kurs/usd").text
        soup = BeautifulSoup(r, 'lxml')
        tag_kurs = soup.find_all("td", align="center")
        print(tag_kurs)
        b = tag_kurs[0].text.rpartition(' / ')[2].replace(',', '.')
        print(b)
        #res = float("{0:.2f}".format(float(message.text) / float(b)))
        res = round(float(message.text) / float(b))
        print(res)
        bot.send_message(message.chat.id, f'–£ –≤–∞—Å –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–∞ {float(message.text)} —Ä—É–±–ª–µ–π = {res} –¥–æ–ª–ª–∞—Ä–∞ –°–®–ê ')
    except ValueError:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ')

def pars_hml(message):

    r = requests.get("https://banki24.by/minsk/kurs/usd").text
    soup = BeautifulSoup(r, 'lxml')
    tag_kurs = soup.find_all("td", align="center")
    print(tag_kurs)
    b_usd = tag_kurs[0].text.rpartition(' / ')[0]
    b_usd_1 = tag_kurs[0].text.rpartition(' / ')[2]
    b_eur = tag_kurs[1].text.rpartition(' / ')[0]
    b_eur_1 = tag_kurs[1].text.rpartition(' / ')[2]
    dollar = f'üá∫üá∏    1 USD   –±–∞–Ω–∫ –ø–æ–∫—É–ø–∞–µ—Ç    {b_usd}     /     –±–∞–Ω–∫ –ø—Ä–æ–¥–∞—ë—Ç {b_usd_1}'
    euro   = f'üá™üá∫    1 EUR   –±–∞–Ω–∫ –ø–æ–∫—É–ø–∞–µ—Ç     {b_eur}    /    –±–∞–Ω–∫ –ø—Ä–æ–¥–∞—ë—Ç {b_eur_1}'
    b = tag_kurs[0].text.rpartition(' / ')[0]
    print(b)
    bot.send_message(message.chat.id, f'*–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –ù–∞—Ü–±–∞–Ω–∫–∞ –†–ë –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:* \n \n {dollar} \n {euro} \n')
    return b

def pars_hml_new(message):
    r = requests.get("https://banki24.by/minsk/kurs/usd").text
    soup = BeautifulSoup(r, 'lxml')
    tag_kurs = soup.find_all("table", class_="table table-condensed table-striped table-hover")
    print(tag_kurs)
bot.polling(none_stop=True, interval=0)